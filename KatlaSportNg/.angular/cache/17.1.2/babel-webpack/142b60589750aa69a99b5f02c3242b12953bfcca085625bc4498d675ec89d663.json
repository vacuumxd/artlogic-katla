{"ast":null,"code":"import { DOCUMENT } from '@angular/common';\nimport { Component, Output, EventEmitter, Input, Inject, ElementRef, Renderer2 } from '@angular/core';\nimport { ModalDismissReasons } from './modal-dismiss-reasons';\nvar NgbModalWindow = /** @class */function () {\n  function NgbModalWindow(document, _elRef, _renderer) {\n    this._elRef = _elRef;\n    this._renderer = _renderer;\n    this.backdrop = true;\n    this.keyboard = true;\n    this.dismissEvent = new EventEmitter();\n    this._document = document;\n  }\n  NgbModalWindow.prototype.backdropClick = function ($event) {\n    if (this.backdrop === true && this._elRef.nativeElement === $event.target) {\n      this.dismiss(ModalDismissReasons.BACKDROP_CLICK);\n    }\n  };\n  NgbModalWindow.prototype.escKey = function ($event) {\n    if (this.keyboard && !$event.defaultPrevented) {\n      this.dismiss(ModalDismissReasons.ESC);\n    }\n  };\n  NgbModalWindow.prototype.dismiss = function (reason) {\n    this.dismissEvent.emit(reason);\n  };\n  NgbModalWindow.prototype.ngOnInit = function () {\n    this._elWithFocus = this._document.activeElement;\n    this._renderer.addClass(this._document.body, 'modal-open');\n  };\n  NgbModalWindow.prototype.ngAfterViewInit = function () {\n    if (!this._elRef.nativeElement.contains(document.activeElement)) {\n      this._elRef.nativeElement['focus'].apply(this._elRef.nativeElement, []);\n    }\n  };\n  NgbModalWindow.prototype.ngOnDestroy = function () {\n    var body = this._document.body;\n    var elWithFocus = this._elWithFocus;\n    var elementToFocus;\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n    elementToFocus['focus'].apply(elementToFocus, []);\n    this._elWithFocus = null;\n    this._renderer.removeClass(body, 'modal-open');\n  };\n  NgbModalWindow.decorators = [{\n    type: Component,\n    args: [{\n      selector: 'ngb-modal-window',\n      host: {\n        '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n        'role': 'dialog',\n        'tabindex': '-1',\n        '(keyup.esc)': 'escKey($event)',\n        '(click)': 'backdropClick($event)'\n      },\n      template: \"\\n    <div [class]=\\\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '')\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\"><ng-content></ng-content></div>\\n    </div>\\n    \"\n    }]\n  }];\n  /** @nocollapse */\n  NgbModalWindow.ctorParameters = function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ElementRef\n    }, {\n      type: Renderer2\n    }];\n  };\n  NgbModalWindow.propDecorators = {\n    \"backdrop\": [{\n      type: Input\n    }],\n    \"centered\": [{\n      type: Input\n    }],\n    \"keyboard\": [{\n      type: Input\n    }],\n    \"size\": [{\n      type: Input\n    }],\n    \"windowClass\": [{\n      type: Input\n    }],\n    \"dismissEvent\": [{\n      type: Output,\n      args: ['dismiss']\n    }]\n  };\n  return NgbModalWindow;\n}();\nexport { NgbModalWindow };\n//# sourceMappingURL=modal-window.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}