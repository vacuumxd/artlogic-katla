{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { Inject, Injectable, LOCALE_ID } from '@angular/core';\nimport { FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth } from '@angular/common';\nimport { DatePipe } from '@angular/common';\n/**\n * Type of the service supplying month and weekday names to to NgbDatepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n * See the i18n demo for how to extend this class and define a custom provider for i18n.\n */\nvar NgbDatepickerI18n = /** @class */function () {\n  function NgbDatepickerI18n() {}\n  NgbDatepickerI18n.decorators = [{\n    type: Injectable\n  }];\n  return NgbDatepickerI18n;\n}();\nexport { NgbDatepickerI18n };\nvar NgbDatepickerI18nDefault = /** @class */function (_super) {\n  __extends(NgbDatepickerI18nDefault, _super);\n  function NgbDatepickerI18nDefault(_locale, _datePipe) {\n    var _this = _super.call(this) || this;\n    _this._locale = _locale;\n    _this._datePipe = _datePipe;\n    var weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n    _this._weekdaysShort = weekdaysStartingOnSunday.map(function (day, index) {\n      return weekdaysStartingOnSunday[(index + 1) % 7];\n    });\n    _this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    _this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n    return _this;\n  }\n  NgbDatepickerI18nDefault.prototype.getWeekdayShortName = function (weekday) {\n    return this._weekdaysShort[weekday - 1];\n  };\n  NgbDatepickerI18nDefault.prototype.getMonthShortName = function (month) {\n    return this._monthsShort[month - 1];\n  };\n  NgbDatepickerI18nDefault.prototype.getMonthFullName = function (month) {\n    return this._monthsFull[month - 1];\n  };\n  NgbDatepickerI18nDefault.prototype.getDayAriaLabel = function (date) {\n    var jsDate = new Date(date.year, date.month - 1, date.day);\n    return this._datePipe.transform(jsDate, 'fullDate', null, this._locale);\n  };\n  NgbDatepickerI18nDefault.decorators = [{\n    type: Injectable\n  }];\n  /** @nocollapse */\n  NgbDatepickerI18nDefault.ctorParameters = function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }, {\n      type: DatePipe\n    }];\n  };\n  return NgbDatepickerI18nDefault;\n}(NgbDatepickerI18n);\nexport { NgbDatepickerI18nDefault };\n//# sourceMappingURL=datepicker-i18n.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}