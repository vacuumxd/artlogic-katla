{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { NgbDate } from './ngb-date';\nimport { Injectable } from '@angular/core';\nimport { isInteger } from '../util/util';\nfunction fromJSDate(jsDate) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nfunction toJSDate(date) {\n  var jsDate = new Date(date.year, date.month - 1, date.day, 12);\n  // this is done avoid 30 -> 1930 conversion\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n  return jsDate;\n}\nvar NgbCalendar = /** @class */function () {\n  function NgbCalendar() {}\n  NgbCalendar.decorators = [{\n    type: Injectable\n  }];\n  return NgbCalendar;\n}();\nexport { NgbCalendar };\nvar NgbCalendarGregorian = /** @class */function (_super) {\n  __extends(NgbCalendarGregorian, _super);\n  function NgbCalendarGregorian() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  NgbCalendarGregorian.prototype.getDaysPerWeek = function () {\n    return 7;\n  };\n  NgbCalendarGregorian.prototype.getMonths = function () {\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  };\n  NgbCalendarGregorian.prototype.getWeeksPerMonth = function () {\n    return 6;\n  };\n  NgbCalendarGregorian.prototype.getNext = function (date, period, number) {\n    if (period === void 0) {\n      period = 'd';\n    }\n    if (number === void 0) {\n      number = 1;\n    }\n    var jsDate = toJSDate(date);\n    switch (period) {\n      case 'y':\n        return new NgbDate(date.year + number, 1, 1);\n      case 'm':\n        jsDate = new Date(date.year, date.month + number - 1, 1, 12);\n        break;\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        break;\n      default:\n        return date;\n    }\n    return fromJSDate(jsDate);\n  };\n  NgbCalendarGregorian.prototype.getPrev = function (date, period, number) {\n    if (period === void 0) {\n      period = 'd';\n    }\n    if (number === void 0) {\n      number = 1;\n    }\n    return this.getNext(date, period, -number);\n  };\n  NgbCalendarGregorian.prototype.getWeekday = function (date) {\n    var jsDate = toJSDate(date);\n    var day = jsDate.getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  };\n  NgbCalendarGregorian.prototype.getWeekNumber = function (week, firstDayOfWeek) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n    var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    var date = week[thursdayIndex];\n    var jsDate = toJSDate(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n    var time = jsDate.getTime();\n    jsDate.setMonth(0); // Compare with Jan 1\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  };\n  NgbCalendarGregorian.prototype.getToday = function () {\n    return fromJSDate(new Date());\n  };\n  NgbCalendarGregorian.prototype.isValid = function (date) {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    }\n    var jsDate = toJSDate(date);\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month && jsDate.getDate() === date.day;\n  };\n  NgbCalendarGregorian.decorators = [{\n    type: Injectable\n  }];\n  return NgbCalendarGregorian;\n}(NgbCalendar);\nexport { NgbCalendarGregorian };\n//# sourceMappingURL=ngb-calendar.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}