{"ast":null,"code":"import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { regExpEscape, toString } from '../util/util';\nvar NgbHighlight = /** @class */function () {\n  function NgbHighlight() {\n    this.highlightClass = 'ngb-highlight';\n  }\n  NgbHighlight.prototype.ngOnChanges = function (changes) {\n    var resultStr = toString(this.result);\n    var resultLC = resultStr.toLowerCase();\n    var termLC = toString(this.term).toLowerCase();\n    var currentIdx = 0;\n    if (termLC.length > 0) {\n      this.parts = resultLC.split(new RegExp(\"(\" + regExpEscape(termLC) + \")\")).map(function (part) {\n        var originalPart = resultStr.substr(currentIdx, part.length);\n        currentIdx += part.length;\n        return originalPart;\n      });\n    } else {\n      this.parts = [resultStr];\n    }\n  };\n  NgbHighlight.decorators = [{\n    type: Component,\n    args: [{\n      selector: 'ngb-highlight',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-template ngFor [ngForOf]=\\\"parts\\\" let-part let-isOdd=\\\"odd\\\">\" + \"<span *ngIf=\\\"isOdd\\\" class=\\\"{{highlightClass}}\\\">{{part}}</span><ng-template [ngIf]=\\\"!isOdd\\\">{{part}}</ng-template>\" + \"</ng-template>\",\n      // template needs to be formatted in a certain way so we don't add empty text nodes\n      styles: [\"\\n    .ngb-highlight {\\n      font-weight: bold;\\n    }\\n  \"]\n    }]\n  }];\n  /** @nocollapse */\n  NgbHighlight.propDecorators = {\n    \"highlightClass\": [{\n      type: Input\n    }],\n    \"result\": [{\n      type: Input\n    }],\n    \"term\": [{\n      type: Input\n    }]\n  };\n  return NgbHighlight;\n}();\nexport { NgbHighlight };\n//# sourceMappingURL=highlight.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}